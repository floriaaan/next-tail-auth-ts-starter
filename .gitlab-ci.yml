image: node:alpine

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .next/cache/

stages:
  - setup
  - build
  - test
  - deploy

setup:
  stage: setup
  script: npm install

build-next:
  stage: build
  script: npm run build
  artifacts:
    paths:
      - .next/
    expire_in: 1 day

build-docker:
  stage: build
  image: docker:20.10.10
  services:
    - docker:20.10.10-dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE


test-e2e:
  stage: test
  script: echo "e2e tests"
  # image: mcr.microsoft.com/playwright:v1.22.0-focal
  # script:
  #   - npm run dev --port=3001 & npx wait-on http://localhost:3001
  #   - npm run test:e2e
  # artifacts:
  #   when: always
  #   paths:
  #     - test-reports/
  #   expire_in: 1 day

test-unit:
  stage: test
  script: echo "unit tests"

# deploy-aws:
#   stage: deploy
#   # dependencies:
#   #   - build
#   #   - test-unit
#   #   - test-e2e

#   variables:
#     SSH_HOST: "ec2-18-234-128-135.compute-1.amazonaws.com"
#     SSH_PATH: "/home/admin/current"
#   before_script:
#     - 'which ssh-agent || (apk add openssh-client)'
#     - mkdir -p ~/.ssh
#     - eval $(ssh-agent -s)
#     - ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
#     - chmod 644 ~/.ssh/known_hosts
#     - chmod 400 $SSH_KEY
#   script:
#     - rm -rf node_modules
#     - scp -i $SSH_KEY -r . admin@$SSH_HOST:$SSH_PATH
#     - ssh -i $SSH_KEY admin@$SSH_HOST "cd $SSH_PATH && npm install && npm run build"
#     - ssh -i $SSH_KEY admin@$SSH_HOST "cd $SSH_PATH && pm2 startOrRestart ecosystem.config.js"

deploy-docker:
  stage: deploy
  # dependencies:
  #   - build-docker
  variables:
    SSH_HOST: "ec2-18-234-128-135.compute-1.amazonaws.com"
    SSH_PATH: "/home/admin/current"
  before_script:
    - 'which ssh-agent || (apk add openssh-client)'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - chmod 400 $SSH_KEY
  script:
    - scp -i $SSH_KEY -r docker-compose.prod.yml admin@$SSH_HOST:$SSH_PATH
    - ssh -i $SSH_KEY admin@$SSH_HOST "cd $SSH_PATH && sudo docker-compose up -d"

  